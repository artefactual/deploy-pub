---

# archivematica-src role

archivematica_src_configure_dashboard: "yes"
archivematica_src_configure_ss: "yes"

archivematica_src_configure_am_user: "admin"
archivematica_src_configure_am_password: "archivematica"
archivematica_src_configure_am_email: "admin@example.com"
archivematica_src_configure_am_api_key: "this_is_the_am_api_key"
archivematica_src_configure_am_site_url: "http://localhost"

archivematica_src_configure_ss_user: "admin"
archivematica_src_configure_ss_password: "archivematica"
archivematica_src_configure_ss_api_key: "this_is_the_ss_api_key"
archivematica_src_configure_ss_url: "http://localhost:8000"
archivematica_src_configure_ss_email: "admin@example.com"

archivematica_src_am_db_password: "aaGKHyMls.20ki$"
archivematica_src_ss_db_password: "aaGKHyMls.20ki$"

# By default the archivematica-src role sets `MCP` and `SS` as the database
# names and a single `archivematica` user for both services. The
# artefactual.percona overwrites existing user privileges when it creates
# databases (it should set `append_privs: true` on the `mysql_user` module call)
# so the SS database privileges overwrite the MCP ones. Setting different
# users for each database works around  this issue.
archivematica_src_am_db_user: "archivematica"
archivematica_src_ss_db_user: "ss"

# percona role

mysql_version_major: "8"
mysql_version_minor: "0"

mysql_root_password: "aaGKHyMls.20ki$"

mysql_databases:
  - name: "{{ archivematica_src_am_db_name }}"
    collation: "{{ archivematica_src_am_db_collation }}"
    encoding: "{{ archivematica_src_am_db_encoding }}"
  - name: "{{ archivematica_src_ss_db_name }}"
    collation: "{{ archivematica_src_ss_db_collation }}"
    encoding: "{{ archivematica_src_ss_db_encoding }}"

mysql_users:
  - name: "{{ archivematica_src_am_db_user }}"
    pass: "{{ archivematica_src_am_db_password }}"
    priv: "{{ archivematica_src_am_db_name }}.*:ALL,GRANT"
    host: "{{ archivematica_src_am_db_host }}"
  - name: "{{ archivematica_src_ss_db_user }}"
    pass: "{{ archivematica_src_ss_db_password }}"
    priv: "{{ archivematica_src_ss_db_name }}.*:ALL,GRANT"
    host: "{{ archivematica_src_ss_db_host }}"

archivematica_src_ss_environment:
  SS_DB_URL: "mysql://{{ archivematica_src_ss_db_user }}:{{ archivematica_src_ss_db_password }}@{{ archivematica_src_ss_db_host }}:{{ archivematica_src_ss_db_port }}/{{ archivematica_src_ss_db_name }}"

# Enable XML metadata validation

archivematica_src_am_mcpclient_environment:
  ARCHIVEMATICA_MCPCLIENT_MCPCLIENT_METADATA_XML_VALIDATION_ENABLED: "true"
  METADATA_XML_VALIDATION_SETTINGS_FILE: "/home/{{ ansible_user_id }}/archivematica-sampledata/xml-validation/xml_validation.py"
  # This allows the rsync command from the Archivematica container to connect
  # to the non-standard port in the AtoM container.
  RSYNC_RSH: "ssh -p 9222"

# Disable FITS

archivematica_src_configure_fpcommand:
  FITS:
    enabled: '0'
    field_name: 'description'

archivematica_src_configure_fprule:
  c3b06895-ef9d-401e-8c51-ac585f955655:
    enabled: '0'
    field_name: 'uuid'

# DIP upload

# The ansible-archivematica-src role supports configuring dashboard settings,
# but it connects to the AtoM host automatically to set SSH credentials. In the
# two VMs scenario of this test, the AtoM host is provisioned after the
# Archivematica host so that approach does not work.
#
# Instead, these custom settings are populated in the post tasks of the
# Archivematica provisioning playbook.
custom_archivematica_src_configure_dashboardsettings:
  url: "http://host.containers.internal:9000"
  rsync_target: "host.containers.internal:/home/archivematica/atom_sword_deposit"
  email: "dip_upload@example.com"
  password: "dip_upload@example.com"
  key: "this_is_the_atom_dip_upload_api_key"
