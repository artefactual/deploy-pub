---
- hosts:
   - atom-ci

  pre_tasks:

    - name: "Add epel-release repository (RHEL)"
      become: "yes"
      yum:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
        state: "present"
      when: ansible_distribution == 'RedHat'
      tags:
        - "acmetool"
        - "ufw"

    - name: "Add epel-release repository (CentOS)"
      become: "yes"
      yum:
        name: "epel-release"
        state: "latest"
      when: ansible_distribution == 'CentOS'
      tags:
        - "acmetool"
        - "ufw"

    # For RHEL it requires the suscription to Red Hat Software Collections, something like:
    # subscription-manager repos --enable rhel-7-server-optional-rpms --enable rhel-server-rhscl-7-rpms
    - name: "Install scl repo (CentOS)"
      become: "yes"
      yum:
        name: "centos-release-scl"
        state: "installed"
      when: ansible_distribution == 'CentOS'
      tags:
        - "composer"

    - name: "Install mysql dependencies packages (CentOS/RH)"
      package:
        name: "{{ mysql_dependencies }}"
        state: "present"
      become: "yes"
      vars:
        mysql_dependencies:
        - MySQL-python
        - gzip
      when: ansible_os_family == "RedHat"
      tags:
        - "atom-sampledata"

    - name: "Remove old database"
      mysql_db:
        name: "{{ atom_config_db_name }}"
        login_user: "{{ atom_config_db_username }}"
        login_password: "{{ atom_config_db_password }}"
        login_host: "{{ atom_config_db_hostname }}"
        state: "absent"
        config_file: "/dev/null"
      ignore_errors: "yes"
      when: atom_install_sampledata|bool
      tags:
        - "atom-sampledata"

    - name: "Install php-cli (required to install Composer) (CentOS/RedHat)"
      package:
        name: "rh-php{{ atom_php_version|default('72') }}-php-cli"
        state: "latest"
      become: true
      when: ansible_os_family == "RedHat"
      tags:
        - "composer"

    - name: "Install php-cli (required to install Composer) (Ubuntu)"
      package:
        name: "php{{ atom_php_version|default('7.2') }}-cli"
        state: "latest"
      become: true
      when: ansible_os_family == "Debian"
      tags:
        - "composer"

    - name: "Create /usr/bin/php link"
      file:
        src: "/opt/rh/rh-php{{ atom_php_version|default('72') }}/root/usr/bin/php"
        dest: "/usr/bin/php"
        state: "link"
      become: true
      when: ansible_os_family == "RedHat"
      tags:
        - "composer"

    - name: "Make sure nginx package is installed"
      become: "yes"
      package:
        name: "nginx"
        state: "present"
      register: "frontend_nginx_installed"
      when:
        - acmetool_want is defined
      tags:
        - "acmetool"

    - name: "Create the nginx directories for site specific configurations"
      become: "yes"
      file: path=/etc/nginx/{{ item }} state=directory owner=root group={{nginx_group}} mode=0755
      with_items:
        - "sites-available"
        - "sites-enabled"
        - "auth_basic"
      when:
        - acmetool_want is defined
      tags:
        - "acmetool"

    - name: "Delete default nginx config file when nginx was installed in frontend"
      become: "yes"
      file:
        name: "/etc/nginx/sites-enabled/default"
        state: "absent"
      when: 
        - frontend_nginx_installed.changed is defined
        - frontend_nginx_installed.changed|bool
        - acmetool_want is defined
        - ansible_os_family == "Debian"
      tags:
        - "acmetool"

    - name: "Install ufw package (CentOS/RedHat)"
      become: "yes"
      package:
        name: ufw
        state: present
      when:
        - ansible_os_family == "RedHat"
      tags:
        - "ufw"

    - name: "Enable and start ufw (CentOS/RedHat)"
      become: "yes"
      service:
        name: ufw
        state: started
        enabled: yes
      when:
        - ansible_os_family == "RedHat"
      tags:
        - "ufw"

    - name: "Allow ssh and http ports"
      become: yes
      ufw:
        rule: "allow"
        proto: "tcp"
        to_port: "{{ item }}"
        state: "enabled"
      with_items:
        - "22"
        - "80"
        - "443"
      tags:
        - "ufw"

  roles:

    - role: "artefactual.elasticsearch"
      become: "yes"
      tags:
        - "elasticsearch"

    - role: "artefactual.percona"
      become: "yes"
      tags:
        - "percona"

    - role: "artefactual.memcached"
      become: "yes"
      tags:
        - "memcached"

    - role: "artefactual.gearman"
      become: "yes"
      tags:
        - "gearman"

    - role: "artefactual.acmetool"
      become: "yes"
      when:
        - acmetool_want is defined
      tags:
        - "acmetool"

    - role: "artefactual.nginx"
      become: "yes"
      tags:
        - "nginx"

    - role: "geerlingguy.composer"
      become: "yes"
      tags:
        - "composer"

    - role: "artefactual.atom"
      become: "yes"
      tags:
        - "atom"

    - role: "artefactual.atom.sampledata-2.5"
      become: "yes"
      tags:
        - "atom-sampledata"
      when: atom_install_sampledata|bool

  post_tasks:

    - name: "Delete default AtoM Sampledata users"
      become: yes
      become_user: "{{ atom_user }}"
      shell: "php symfony tools:delete-user -f {{ item }}"
      args:
        chdir: "{{ atom_path }}"
      loop:
        - "demo"
        - "Editor"
        - "translator"
      when:
        - "sampledata_delete_default_users is not defined or sampledata_delete_default_users|bool"
        - "atom_install_sampledata|bool"
      tags:
        - "atom-sampledata"

    - name: "Add atom user"
      become: yes
      become_user: "{{ atom_user }}"
      shell: "php symfony tools:add-superuser --email='{{ atom_user_email }}' --password='{{ atom_user_password }}' {{ atom_user_username }}"
      args:
        chdir: "{{ atom_path }}"
      when:
        - "atom_user_username is defined"
        - "atom_install_sampledata|bool"
      tags:
        - "atom-sampledata"

    # You cannot delete all superusers, so the Artefactual user deletion is done when new superadmin is added
    - name: "Delete default AtoM Sampledata superuser (Artefactual)"
      become: yes
      become_user: "{{ atom_user }}"
      shell: "php symfony tools:delete-user -f Artefactual"
      args:
        chdir: "{{ atom_path }}"
      when:
        - "atom_user_username is defined"
        - "atom_install_sampledata|bool"
      tags:
        - "atom-sampledata"

    - name: "Add extra super users"
      become: yes
      become_user: "{{ atom_user }}"
      shell: "php symfony tools:add-superuser --email='{{ item.email }}' --password='{{ item.password }}' {{ item.username }}"
      args:
        chdir: "{{ atom_path }}"
      when:
        - "atom_extra_superusers is defined"
        - "atom_install_sampledata|bool"
      with_items: "{{ atom_extra_superusers }}"
      tags:
        - "atom-sampledata"

    - name: "Install fail2ban"
      become: yes
      apt:
        name: "fail2ban"
        state: "latest"
      when: ansible_os_family == "Debian"
      tags:
        - "fail2ban"
